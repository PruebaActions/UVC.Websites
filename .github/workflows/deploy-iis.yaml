name: Deploy to IIS (.NET Framework 4.8)

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build and Deploy to IIS
    runs-on:
      group: DAST

    env:
      SOLUTION_PATH: 'DescopeSampleApp.sln'             # Nombre real de la soluciÃ³n
      WEB_PROJECT_PATH: 'DescopeSampleApp/DescopeSampleApp.csproj' # Ruta real del proyecto web
      BUILD_DIR: 'C:\builds\DescopeSampleApp\publish'   # Carpeta temporal de build
      WWWROOT: 'C:\inetpub\wwwroot'                     # Ruta base de IIS
      BACKUP_ROOT: 'C:\inetpub\wwwroot\backups'         # Carpeta base de backups
      SITE_PREFIX: 'UVC.Websites'                       # Prefijo de nombre del sitio

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore $env:SOLUTION_PATH

      - name: Build full solution (Release)
        run: msbuild $env:SOLUTION_PATH /p:Configuration=Release

      - name: Ensure build directory exists
        shell: powershell
        run: |
          if (-Not (Test-Path $env:BUILD_DIR)) {
            New-Item -ItemType Directory -Force -Path $env:BUILD_DIR | Out-Null
            Write-Host "Created folder: $env:BUILD_DIR"
          } else {
            Write-Host "Folder already exists: $env:BUILD_DIR"
          }

      # ðŸ”¥ PublicaciÃ³n corregida (usa target correcto)
      - name: Publish web project (Web Application)
        run: |
          Write-Host "Publishing project to: $env:BUILD_DIR"
          msbuild $env:WEB_PROJECT_PATH `
            /t:PipelinePreDeployCopyAllFilesToOneFolder `
            /p:_PackageTempDir="$env:BUILD_DIR\" `
            /p:Configuration=Release `
            /p:VSToolsPath="C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Microsoft\VisualStudio\v17.0"

      - name: Verify publish output
        shell: powershell
        run: |
          if (-Not (Test-Path $env:BUILD_DIR)) {
            Write-Host "Publish folder not found: $env:BUILD_DIR"
            exit 1
          } else {
            Write-Host "Publish folder created successfully: $env:BUILD_DIR"
            Get-ChildItem $env:BUILD_DIR
          }

      - name: Determine next deployment folder
        id: versioning
        shell: powershell
        run: |
          $date = Get-Date -Format "yyyy-MM-dd"
          $prefix = "$env:SITE_PREFIX-$date"
          $existing = Get-ChildItem -Path $env:WWWROOT -Directory | Where-Object { $_.Name -like "$prefix-*" }
          
          if ($existing) {
            $maxNum = ($existing.Name | ForEach-Object {
              if ($_ -match "$prefix-#(\d+)$") { [int]$matches[1] }
            } | Measure-Object -Maximum).Maximum
            $nextNum = $maxNum + 1
          } else {
            $nextNum = 1
          }

          $deployFolder = "$prefix-#$nextNum"
          $deployPath = Join-Path $env:WWWROOT $deployFolder

          echo "Deployment folder: $deployFolder"
          echo "deploy-folder=$deployFolder" >> $env:GITHUB_OUTPUT
          echo "deploy-path=$deployPath" >> $env:GITHUB_OUTPUT

      - name: Backup current IIS websites
        shell: powershell
        run: |
          $timestamp = Get-Date -Format "yyyy-MM-dd-HHmmss"
          $backupPath = Join-Path $env:BACKUP_ROOT "$($env:SITE_PREFIX)-$timestamp"
          Write-Host "Creating backup at: $backupPath"

          if (Test-Path $env:WWWROOT) {
            New-Item -ItemType Directory -Force -Path $backupPath | Out-Null
            Copy-Item "$env:WWWROOT\*" $backupPath -Recurse -Force
            Write-Host "Backup completed."
          } else {
            Write-Host "IIS root not found, skipping backup."
          }

      - name: Deploy to IIS
        shell: powershell
        run: |
          $deployPath = "${{ steps.versioning.outputs.deploy-path }}"
          Write-Host "Deploying to $deployPath"

          if (-Not (Test-Path $deployPath)) {
            New-Item -ItemType Directory -Force -Path $deployPath | Out-Null
          }

          Copy-Item "$env:BUILD_DIR\*" $deployPath -Recurse -Force
          Write-Host "Deployment completed successfully."

      - name: Update IIS site to latest deployment
        shell: powershell
        run: |
          Import-Module WebAdministration
          $latest = Get-ChildItem "C:\inetpub\wwwroot" | Where-Object { $_.Name -like "$($env:SITE_PREFIX)-*" } | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($latest) {
            Set-ItemProperty "IIS:\Sites\Default Web Site" -Name physicalPath -Value $latest.FullName
            Restart-WebAppPool "DefaultAppPool"
            Write-Host "IIS now points to $($latest.FullName)"
          } else {
            Write-Host "No deployment folder found in wwwroot."
          }

      - name: Restart IIS
        shell: powershell
        run: |
          Write-Host "Restarting IIS..."
          iisreset
          Write-Host "IIS restarted successfully."
