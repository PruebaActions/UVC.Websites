name: CI - Multi Project Pipeline

on:
  pull_request:
    branches: 
      - master
  workflow_dispatch:
#dcazc
permissions:
  actions: read
  contents: read
  security-events: write
  issues: write
##asdsadsadsadsa
jobs:
  run-pipeline:
    uses: PruebaActions/WorkFlows-Templates/.github/workflows/pr-dotnet-codeql-final.yaml@main
    with:
      codeql_language: "csharp"
      has_tests: false
      project_paths: |
        [
          { "path": "./DescopeSampleApp.sln", "isFramework": "true" }
        ]

      docker_targets: |
        [
          {
            "image_name": "descopesampleapp-pr",
            "container_name": "descopesampleapp-pr-container",
            "dockerfile": "./DescopeSampleApp/Dockerfile",
            "container_port": "80",
            "isFramework": "true"
          }
        ]




# name: Pull Request Pipeline

# on:
#   pull_request:
#     branches:
#       - master


# permissions:
#   actions: read
#   contents: read
#   security-events: write
#   issues: write

# jobs:
#   pr-pipeline:
#     uses: PruebaActions/WorkFlows-Templates/.github/workflows/pr-dotnet-codeql.yaml@main
#     with:
#       image_name: descopesampleapp-pr
#       container_name: descopesampleapp-pr-container
#       dockerfile: ./DescopeSampleApp/Dockerfile              # El Dockerfile está en la raíz del proyecto                    # Puerto en la máquina host
#       container_port: '80'                  # IIS dentro del contenedor suele usar el 80
#       #codeql_languages: 'csharp'
#       project_paths: '["./DescopeSampleApp.sln"]'
#       has_tests: false                      # ponlo en true si luego agregas un proyecto de pruebas
